// <auto-generated />
using CQELight.DAL.EFCore.Integration.Tests;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage;
using Microsoft.EntityFrameworkCore.Storage.Internal;
using System;

namespace CQELight.DAL.EFCore.Integration.Tests.Migrations
{
    [DbContext(typeof(TestDbContext))]
    partial class TestDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.0.2-rtm-10011")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("CQELight.DAL.EFCore.Integration.Tests.AzureLocation", b =>
                {
                    b.Property<string>("Country");

                    b.Property<string>("DataCenter");

                    b.Property<bool>("Deleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("DELETED")
                        .HasDefaultValue(false);

                    b.Property<DateTime?>("DeletionDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("DELETE_DATE")
                        .HasDefaultValue(null);

                    b.Property<DateTime>("EditDate")
                        .HasColumnName("EDIT_DATE");

                    b.HasKey("Country", "DataCenter");

                    b.ToTable("AzureLocation","dbo");
                });

            modelBuilder.Entity("CQELight.DAL.EFCore.Integration.Tests.Comment", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("Com_ID");

                    b.Property<bool>("Deleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("DELETED")
                        .HasDefaultValue(false);

                    b.Property<DateTime?>("DeletionDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("DELETE_DATE")
                        .HasDefaultValue(null);

                    b.Property<DateTime>("EditDate")
                        .HasColumnName("EDIT_DATE");

                    b.Property<Guid>("Owner_Id")
                        .HasColumnName("Use_ID");

                    b.Property<Guid>("Post_Id")
                        .HasColumnName("Pos_ID");

                    b.Property<string>("Value")
                        .HasColumnName("Value");

                    b.HasKey("Id");

                    b.HasIndex("Owner_Id");

                    b.HasIndex("Post_Id", "Owner_Id", "Value");

                    b.ToTable("Comment","dbo");
                });

            modelBuilder.Entity("CQELight.DAL.EFCore.Integration.Tests.Hyperlink", b =>
                {
                    b.Property<string>("Value")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("Hyperlink")
                        .HasMaxLength(1024);

                    b.Property<bool>("Deleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("DELETED")
                        .HasDefaultValue(false);

                    b.Property<DateTime?>("DeletionDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("DELETE_DATE")
                        .HasDefaultValue(null);

                    b.Property<DateTime>("EditDate")
                        .HasColumnName("EDIT_DATE");

                    b.Property<Guid>("WebSite_Id")
                        .HasColumnName("Web_ID");

                    b.HasKey("Value");

                    b.HasIndex("WebSite_Id");

                    b.ToTable("Hyperlinks","dbo");
                });

            modelBuilder.Entity("CQELight.DAL.EFCore.Integration.Tests.Post", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("Pos_ID");

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasColumnName("Content")
                        .HasMaxLength(65536);

                    b.Property<bool>("Deleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("DELETED")
                        .HasDefaultValue(false);

                    b.Property<DateTime?>("DeletionDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("DELETE_DATE")
                        .HasDefaultValue(null);

                    b.Property<DateTime>("EditDate")
                        .HasColumnName("EDIT_DATE");

                    b.Property<DateTime?>("PublicationDate")
                        .HasColumnName("PublicationDate");

                    b.Property<bool>("Published")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("Published")
                        .HasDefaultValue(true);

                    b.Property<string>("QuickUrl")
                        .HasColumnName("ShortAccess")
                        .HasMaxLength(2048);

                    b.Property<int>("Version")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("Version")
                        .HasDefaultValue(1);

                    b.Property<Guid>("WebSiteId")
                        .HasColumnName("Web_ID");

                    b.Property<Guid?>("Writer_Id")
                        .HasColumnName("Use_ID");

                    b.HasKey("Id");

                    b.HasIndex("QuickUrl")
                        .IsUnique()
                        .HasFilter("[ShortAccess] IS NOT NULL");

                    b.HasIndex("WebSiteId");

                    b.HasIndex("Writer_Id");

                    b.ToTable("Post","dbo");
                });

            modelBuilder.Entity("CQELight.DAL.EFCore.Integration.Tests.PostTag", b =>
                {
                    b.Property<Guid>("Post_Id")
                        .HasColumnName("Pos_ID");

                    b.Property<Guid>("Tag_Id")
                        .HasColumnName("Tag_ID");

                    b.Property<bool>("Deleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("DELETED")
                        .HasDefaultValue(false);

                    b.Property<DateTime?>("DeletionDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("DELETE_DATE")
                        .HasDefaultValue(null);

                    b.Property<DateTime>("EditDate")
                        .HasColumnName("EDIT_DATE");

                    b.HasKey("Post_Id", "Tag_Id");

                    b.HasIndex("Tag_Id");

                    b.ToTable("PostTag","dbo");
                });

            modelBuilder.Entity("CQELight.DAL.EFCore.Integration.Tests.Tag", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("Tag_ID");

                    b.Property<bool>("Deleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("DELETED")
                        .HasDefaultValue(false);

                    b.Property<DateTime?>("DeletionDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("DELETE_DATE")
                        .HasDefaultValue(null);

                    b.Property<DateTime>("EditDate")
                        .HasColumnName("EDIT_DATE");

                    b.Property<string>("Value")
                        .HasColumnName("Value");

                    b.HasKey("Id");

                    b.HasIndex("Value")
                        .IsUnique()
                        .HasFilter("[Value] IS NOT NULL");

                    b.ToTable("Tag","dbo");
                });

            modelBuilder.Entity("CQELight.DAL.EFCore.Integration.Tests.User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("Use_ID");

                    b.Property<bool>("Deleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("DELETED")
                        .HasDefaultValue(false);

                    b.Property<DateTime?>("DeletionDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("DELETE_DATE")
                        .HasDefaultValue(null);

                    b.Property<DateTime>("EditDate")
                        .HasColumnName("EDIT_DATE");

                    b.Property<string>("LastName")
                        .HasColumnName("LastName");

                    b.Property<string>("Name")
                        .HasColumnName("Name");

                    b.HasKey("Id");

                    b.ToTable("User","dbo");
                });

            modelBuilder.Entity("CQELight.DAL.EFCore.Integration.Tests.WebSite", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("Web_ID");

                    b.Property<string>("AzureCountry")
                        .HasColumnName("AzureCountry");

                    b.Property<string>("AzureDataCenter")
                        .HasColumnName("AzureDataCenter");

                    b.Property<bool>("Deleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("DELETED")
                        .HasDefaultValue(false);

                    b.Property<DateTime?>("DeletionDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("DELETE_DATE")
                        .HasDefaultValue(null);

                    b.Property<DateTime>("EditDate")
                        .HasColumnName("EDIT_DATE");

                    b.Property<string>("Url")
                        .IsRequired()
                        .HasColumnName("URL");

                    b.HasKey("Id");

                    b.HasIndex("Url")
                        .IsUnique();

                    b.HasIndex("AzureCountry", "AzureDataCenter");

                    b.ToTable("WebSite","dbo");
                });

            modelBuilder.Entity("CQELight.DAL.EFCore.Integration.Tests.Comment", b =>
                {
                    b.HasOne("CQELight.DAL.EFCore.Integration.Tests.User", "Owner")
                        .WithMany("Comments")
                        .HasForeignKey("Owner_Id")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("CQELight.DAL.EFCore.Integration.Tests.Post", "Post")
                        .WithMany("Comments")
                        .HasForeignKey("Post_Id")
                        .OnDelete(DeleteBehavior.Restrict);
                });

            modelBuilder.Entity("CQELight.DAL.EFCore.Integration.Tests.Hyperlink", b =>
                {
                    b.HasOne("CQELight.DAL.EFCore.Integration.Tests.WebSite", "WebSite")
                        .WithMany("HyperLinks")
                        .HasForeignKey("WebSite_Id")
                        .OnDelete(DeleteBehavior.Restrict);
                });

            modelBuilder.Entity("CQELight.DAL.EFCore.Integration.Tests.Post", b =>
                {
                    b.HasOne("CQELight.DAL.EFCore.Integration.Tests.WebSite", "WebSite")
                        .WithMany("Posts")
                        .HasForeignKey("WebSiteId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("CQELight.DAL.EFCore.Integration.Tests.User", "Writer")
                        .WithMany("Posts")
                        .HasForeignKey("Writer_Id")
                        .OnDelete(DeleteBehavior.SetNull);
                });

            modelBuilder.Entity("CQELight.DAL.EFCore.Integration.Tests.PostTag", b =>
                {
                    b.HasOne("CQELight.DAL.EFCore.Integration.Tests.Post", "Post")
                        .WithMany("Tags")
                        .HasForeignKey("Post_Id")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("CQELight.DAL.EFCore.Integration.Tests.Tag", "Tag")
                        .WithMany("Posts")
                        .HasForeignKey("Tag_Id")
                        .OnDelete(DeleteBehavior.Restrict);
                });

            modelBuilder.Entity("CQELight.DAL.EFCore.Integration.Tests.WebSite", b =>
                {
                    b.HasOne("CQELight.DAL.EFCore.Integration.Tests.AzureLocation", "AzureLocation")
                        .WithMany()
                        .HasForeignKey("AzureCountry", "AzureDataCenter")
                        .OnDelete(DeleteBehavior.SetNull);
                });
#pragma warning restore 612, 618
        }
    }
}
